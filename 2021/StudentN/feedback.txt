A1: 5

ZoomCall and TeamsCall should not be abstract, only VideoCall.

It is arguable, but I don't think an aggregation between Participant and VideoCall is really appropriate. A Participant is not really a *part* of a VideoCall, even though we use the phrase "to take part in".

A2: 3

Show the object creation as usual with a <<create>> message to a new lifeline, that starts at the point of creation.


B1: 2

Be clear that the labels on your transitions are events, in this case, message calls. E.g. use exactly join(v), and where you invent new method names, use consistent capitalisation and make sure what you use on the transitions is exactly consistent with what you have in your class diagram and your note about what else you are adding.

B2: 0

You were told not to add things you didn't need, so you should not add a new attribute to represent whether the participant is in a call: that is already there in the property that is the association end connecting Participant to VideoCall in your class diagram.

Note that context Participant inv: is not quite right: this whole state diagram is in the context of Participant (so you can assume that), and you are not defining an invariant of the class which is what inv: means.

OCL on the unmuting transition: valiant attempt but not close enough to making sense for marks.

What you want on the transition is a guard in []: check you understand guards on state diagram transitions.

Total: 10



